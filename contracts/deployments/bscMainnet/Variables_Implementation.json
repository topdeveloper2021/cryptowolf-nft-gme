{
  "address": "0xFcB4c3A4beB27ce9BBdEb27e599F4139c81fb433",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "PriceBNBChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newPriceCWOLF",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newPriceBNB",
          "type": "uint256"
        }
      ],
      "name": "PriceCWOLFAndBNBChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "PriceCWOLFChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "changeAddressMinterWallet",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getDollarsInBNB",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getDollarsInCWOLF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minterWalletAddress_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minterWalletAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceBNB",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceCWOLF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "setBNBPriceInDollars",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newPriceCWOLF",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newPriceBNB",
          "type": "uint256"
        }
      ],
      "name": "setCWOLFAndBNBPriceInDollars",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "setCWolfPriceInDollars",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4ce6aaaf520d1c7a03bcd0db6f99eb172e59defbb100fea4fa0b6b5a4644f998",
  "receipt": {
    "to": null,
    "from": "0x759a1040B2bc2220f8ef16aC12E4B6A18d3d2DF7",
    "contractAddress": "0xFcB4c3A4beB27ce9BBdEb27e599F4139c81fb433",
    "transactionIndex": 6,
    "gasUsed": "568286",
    "logsBloom": "0x
    "blockHash": "0x127d8e3e43a05cbadf0ea6573b6f245b1438e496ff9a909738f7d6c78d71ac96",
    "transactionHash": "0x4ce6aaaf520d1c7a03bcd0db6f99eb172e59defbb100fea4fa0b6b5a4644f998",
    "logs": [],
    "blockNumber": 13626805,
    "cumulativeGasUsed": "848103",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "b40a40780cb9fdef3f2fc14f60ed9b80",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceBNBChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newPriceCWOLF\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newPriceBNB\",\"type\":\"uint256\"}],\"name\":\"PriceCWOLFAndBNBChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceCWOLFChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"changeAddressMinterWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getDollarsInBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getDollarsInCWOLF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minterWalletAddress_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minterWalletAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceCWOLF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setBNBPriceInDollars\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPriceCWOLF\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPriceBNB\",\"type\":\"uint256\"}],\"name\":\"setCWOLFAndBNBPriceInDollars\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"setCWolfPriceInDollars\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Variables.sol\":\"Variables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xd0fc241d70f27a08c43c0c9e5a15d2661a643d8db46c219b2322bef8a34bbdd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6287586f5e4a103c89d4dda41406136cdf283cc625bd1ebfdf1468aae5bfe449\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x0c34de2f75ee9ab06bf9151824be575885d0a9b460c292476a260578fb5a4e1c\",\"license\":\"MIT\"},\"contracts/Variables.sol\":{\"content\":\"/*\\nCRYPTOWOLF\\nWeb: https://cryptowolf.finance\\n*/\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\ncontract Variables is OwnableUpgradeable {\\n    bool public isInitialized;\\n    uint256 public priceCWOLF;\\n    uint256 public priceBNB;\\n    address public minterWalletAddress;\\n\\n    event PriceCWOLFChanged(uint256 newPrice);\\n    event PriceBNBChanged(uint256 newPrice);\\n    event PriceCWOLFAndBNBChanged(uint256 _newPriceCWOLF, uint256 _newPriceBNB);\\n\\n    constructor() initializer {}\\n\\n    function initialize(address minterWalletAddress_) public initializer {\\n        __Ownable_init();\\n        priceCWOLF = 8 * 1e17;\\n        priceBNB = 500000000000000000000;\\n        minterWalletAddress = minterWalletAddress_;\\n        isInitialized = true;\\n    }\\n\\n    function setCWolfPriceInDollars(uint256 _newPrice) external {\\n        require(\\n            msg.sender == owner() || msg.sender == minterWalletAddress,\\n            \\\"Not allowed\\\"\\n        );\\n        priceCWOLF = _newPrice;\\n        emit PriceCWOLFChanged(_newPrice);\\n    }\\n\\n    function getDollarsInCWOLF(uint256 _amount)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return (_amount * 1e18) / priceCWOLF;\\n    }\\n\\n    function setBNBPriceInDollars(uint256 _newPrice) external {\\n        require(\\n            msg.sender == owner() || msg.sender == minterWalletAddress,\\n            \\\"Not allowed\\\"\\n        );\\n        priceBNB = _newPrice;\\n        emit PriceBNBChanged(_newPrice);\\n    }\\n\\n    function getDollarsInBNB(uint256 _amount) external view returns (uint256) {\\n        return (_amount * 1e18) / priceBNB;\\n    }\\n\\n    function setCWOLFAndBNBPriceInDollars(\\n        uint256 _newPriceCWOLF,\\n        uint256 _newPriceBNB\\n    ) external {\\n        require(\\n            msg.sender == owner() || msg.sender == minterWalletAddress,\\n            \\\"Not allowed\\\"\\n        );\\n        priceCWOLF = _newPriceCWOLF;\\n        priceBNB = _newPriceBNB;\\n        emit PriceCWOLFAndBNBChanged(_newPriceCWOLF, _newPriceBNB);\\n    }\\n\\n    function changeAddressMinterWallet(address _newAddress)\\n        external\\n        onlyOwner\\n        returns (bool)\\n    {\\n        minterWalletAddress = _newAddress;\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x77f268a03eea847f08e279687989fe734213b413ecf90bfa710a92a35a587cbe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b506108d1806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a8f70d0f1161008c578063c4d66de811610066578063c4d66de8146101bf578063e524da0d146101d2578063e66baf0a146101e5578063f2fde38b146101f857600080fd5b8063a8f70d0f14610190578063aaa2400b14610199578063b61f61b4146101ac57600080fd5b8063674adb7d116100c8578063674adb7d14610147578063715018a61461015a5780637dad3ed0146101625780638da5cb5b1461016b57600080fd5b8063392e53cd146100ef5780634313da551461011157806365db5d2514610126575b600080fd5b6065546100fc9060ff1681565b60405190151581526020015b60405180910390f35b61012461011f366004610739565b61020b565b005b610139610134366004610739565b61028f565b604051908152602001610108565b610139610155366004610739565b6102b7565b6101246102cf565b61013960665481565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610108565b61013960675481565b6100fc6101a7366004610752565b610305565b6101246101ba366004610782565b610357565b6101246101cd366004610752565b6103dd565b606854610178906001600160a01b031681565b6101246101f3366004610739565b610493565b610124610206366004610752565b610507565b6033546001600160a01b031633148061022e57506068546001600160a01b031633145b6102535760405162461bcd60e51b815260040161024a906107a4565b60405180910390fd5b60668190556040518181527f57f6453c868b3f19ced48c8d13a8b98b2a8cdafb496ad127359e7d7d1b07fef4906020015b60405180910390a150565b6067546000906102a783670de0b6b3a76400006107c9565b6102b191906107f6565b92915050565b6066546000906102a783670de0b6b3a76400006107c9565b6033546001600160a01b031633146102f95760405162461bcd60e51b815260040161024a90610818565b61030360006105a2565b565b6033546000906001600160a01b031633146103325760405162461bcd60e51b815260040161024a90610818565b50606880546001600160a01b0383166001600160a01b03199091161790556001919050565b6033546001600160a01b031633148061037a57506068546001600160a01b031633145b6103965760405162461bcd60e51b815260040161024a906107a4565b6066829055606781905560408051838152602081018390527fba6a47aa73c050d8da6d17f712f974f84c6f2ccfff16bf6c5112197be3a3652c910160405180910390a15050565b600054610100900460ff16806103f6575060005460ff16155b6104125760405162461bcd60e51b815260040161024a9061084d565b600054610100900460ff16158015610434576000805461ffff19166101011790555b61043c6105f4565b670b1a2bc2ec500000606655681b1ae4d6e2ef500000606755606880546001600160a01b0319166001600160a01b0384161790556065805460ff19166001179055801561048f576000805461ff00191690555b5050565b6033546001600160a01b03163314806104b657506068546001600160a01b031633145b6104d25760405162461bcd60e51b815260040161024a906107a4565b60678190556040518181527f47245fe1fe347d0117316a639b3c9b4f3194066078425a7c24cbdaaf0ffe926990602001610284565b6033546001600160a01b031633146105315760405162461bcd60e51b815260040161024a90610818565b6001600160a01b0381166105965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161024a565b61059f816105a2565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061060d575060005460ff16155b6106295760405162461bcd60e51b815260040161024a9061084d565b600054610100900460ff1615801561064b576000805461ffff19166101011790555b61065361066f565b61065b6106d9565b801561059f576000805461ff001916905550565b600054610100900460ff1680610688575060005460ff16155b6106a45760405162461bcd60e51b815260040161024a9061084d565b600054610100900460ff1615801561065b576000805461ffff1916610101179055801561059f576000805461ff001916905550565b600054610100900460ff16806106f2575060005460ff16155b61070e5760405162461bcd60e51b815260040161024a9061084d565b600054610100900460ff16158015610730576000805461ffff19166101011790555b61065b336105a2565b60006020828403121561074b57600080fd5b5035919050565b60006020828403121561076457600080fd5b81356001600160a01b038116811461077b57600080fd5b9392505050565b6000806040838503121561079557600080fd5b50508035926020909101359150565b6020808252600b908201526a139bdd08185b1b1bddd95960aa1b604082015260600190565b60008160001904831182151516156107f157634e487b7160e01b600052601160045260246000fd5b500290565b60008261081357634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220ecb8043705518f29069e02bff0ae64c9196ac0d1ff85212186b275add5a260ec64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a8f70d0f1161008c578063c4d66de811610066578063c4d66de8146101bf578063e524da0d146101d2578063e66baf0a146101e5578063f2fde38b146101f857600080fd5b8063a8f70d0f14610190578063aaa2400b14610199578063b61f61b4146101ac57600080fd5b8063674adb7d116100c8578063674adb7d14610147578063715018a61461015a5780637dad3ed0146101625780638da5cb5b1461016b57600080fd5b8063392e53cd146100ef5780634313da551461011157806365db5d2514610126575b600080fd5b6065546100fc9060ff1681565b60405190151581526020015b60405180910390f35b61012461011f366004610739565b61020b565b005b610139610134366004610739565b61028f565b604051908152602001610108565b610139610155366004610739565b6102b7565b6101246102cf565b61013960665481565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610108565b61013960675481565b6100fc6101a7366004610752565b610305565b6101246101ba366004610782565b610357565b6101246101cd366004610752565b6103dd565b606854610178906001600160a01b031681565b6101246101f3366004610739565b610493565b610124610206366004610752565b610507565b6033546001600160a01b031633148061022e57506068546001600160a01b031633145b6102535760405162461bcd60e51b815260040161024a906107a4565b60405180910390fd5b60668190556040518181527f57f6453c868b3f19ced48c8d13a8b98b2a8cdafb496ad127359e7d7d1b07fef4906020015b60405180910390a150565b6067546000906102a783670de0b6b3a76400006107c9565b6102b191906107f6565b92915050565b6066546000906102a783670de0b6b3a76400006107c9565b6033546001600160a01b031633146102f95760405162461bcd60e51b815260040161024a90610818565b61030360006105a2565b565b6033546000906001600160a01b031633146103325760405162461bcd60e51b815260040161024a90610818565b50606880546001600160a01b0383166001600160a01b03199091161790556001919050565b6033546001600160a01b031633148061037a57506068546001600160a01b031633145b6103965760405162461bcd60e51b815260040161024a906107a4565b6066829055606781905560408051838152602081018390527fba6a47aa73c050d8da6d17f712f974f84c6f2ccfff16bf6c5112197be3a3652c910160405180910390a15050565b600054610100900460ff16806103f6575060005460ff16155b6104125760405162461bcd60e51b815260040161024a9061084d565b600054610100900460ff16158015610434576000805461ffff19166101011790555b61043c6105f4565b670b1a2bc2ec500000606655681b1ae4d6e2ef500000606755606880546001600160a01b0319166001600160a01b0384161790556065805460ff19166001179055801561048f576000805461ff00191690555b5050565b6033546001600160a01b03163314806104b657506068546001600160a01b031633145b6104d25760405162461bcd60e51b815260040161024a906107a4565b60678190556040518181527f47245fe1fe347d0117316a639b3c9b4f3194066078425a7c24cbdaaf0ffe926990602001610284565b6033546001600160a01b031633146105315760405162461bcd60e51b815260040161024a90610818565b6001600160a01b0381166105965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161024a565b61059f816105a2565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061060d575060005460ff16155b6106295760405162461bcd60e51b815260040161024a9061084d565b600054610100900460ff1615801561064b576000805461ffff19166101011790555b61065361066f565b61065b6106d9565b801561059f576000805461ff001916905550565b600054610100900460ff1680610688575060005460ff16155b6106a45760405162461bcd60e51b815260040161024a9061084d565b600054610100900460ff1615801561065b576000805461ffff1916610101179055801561059f576000805461ff001916905550565b600054610100900460ff16806106f2575060005460ff16155b61070e5760405162461bcd60e51b815260040161024a9061084d565b600054610100900460ff16158015610730576000805461ffff19166101011790555b61065b336105a2565b60006020828403121561074b57600080fd5b5035919050565b60006020828403121561076457600080fd5b81356001600160a01b038116811461077b57600080fd5b9392505050565b6000806040838503121561079557600080fd5b50508035926020909101359150565b6020808252600b908201526a139bdd08185b1b1bddd95960aa1b604082015260600190565b60008160001904831182151516156107f157634e487b7160e01b600052601160045260246000fd5b500290565b60008261081357634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea2646970667358221220ecb8043705518f29069e02bff0ae64c9196ac0d1ff85212186b275add5a260ec64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 131,
        "contract": "contracts/Variables.sol:Variables",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 134,
        "contract": "contracts/Variables.sol:Variables",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3038,
        "contract": "contracts/Variables.sol:Variables",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/Variables.sol:Variables",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 124,
        "contract": "contracts/Variables.sol:Variables",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 7158,
        "contract": "contracts/Variables.sol:Variables",
        "label": "isInitialized",
        "offset": 0,
        "slot": "101",
        "type": "t_bool"
      },
      {
        "astId": 7160,
        "contract": "contracts/Variables.sol:Variables",
        "label": "priceCWOLF",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 7162,
        "contract": "contracts/Variables.sol:Variables",
        "label": "priceBNB",
        "offset": 0,
        "slot": "103",
        "type": "t_uint256"
      },
      {
        "astId": 7164,
        "contract": "contracts/Variables.sol:Variables",
        "label": "minterWalletAddress",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}